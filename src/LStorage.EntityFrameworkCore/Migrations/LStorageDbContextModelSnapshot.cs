// <auto-generated />
using System;
using LStorage.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LStorage.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(LStorageDbContext))]
    partial class LStorageDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LStorage.Area", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasComment("Id");

                    b.Property<string>("Code")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasComment("编码");

                    b.HasKey("Id");

                    b.ToTable("Areas", (string)null);
                });

            modelBuilder.Entity("LStorage.Inventory", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasComment("Id");

                    b.Property<DateTime>("InboundTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("入库时间");

                    b.Property<string>("MaterialId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasComment("物料Id");

                    b.Property<string>("PalletId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasComment("托盘Id");

                    b.Property<int>("Qty")
                        .HasColumnType("int")
                        .HasComment("数量");

                    b.HasKey("Id");

                    b.ToTable("Inventories", (string)null);
                });

            modelBuilder.Entity("LStorage.Location", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasComment("Id");

                    b.Property<string>("AreaId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasComment("区域Id");

                    b.Property<string>("Code")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasComment("编码");

                    b.Property<int>("MaxPalletCount")
                        .HasColumnType("int")
                        .HasComment("最多托盘数量");

                    b.Property<int>("PalletCount")
                        .HasColumnType("int")
                        .HasComment("托盘数量");

                    b.Property<string>("ShelfId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasComment("货架Id");

                    b.HasKey("Id");

                    b.ToTable("Locations", (string)null);
                });

            modelBuilder.Entity("LStorage.Material", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasComment("Id");

                    b.Property<string>("Code")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasComment("编码");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasComment("名称");

                    b.HasKey("Id");

                    b.ToTable("Materials", (string)null);
                });

            modelBuilder.Entity("LStorage.Pallet", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasComment("Id");

                    b.Property<string>("Code")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasComment("编码");

                    b.Property<string>("LocationId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasComment("位置Id");

                    b.HasKey("Id");

                    b.ToTable("Pallets", (string)null);
                });

            modelBuilder.Entity("LStorage.Shelf", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasComment("Id");

                    b.Property<string>("AreaId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasComment("区域Id");

                    b.Property<string>("Code")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasComment("编码");

                    b.Property<int>("IOType")
                        .HasColumnType("int")
                        .HasComment("存储方式类型");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("货架类型");

                    b.HasKey("Id");

                    b.ToTable("Shelves", (string)null);
                });

            modelBuilder.Entity("LStorage.Location", b =>
                {
                    b.OwnsOne("LStorage.LocationRCLD", "RCLD", b1 =>
                        {
                            b1.Property<string>("LocationId")
                                .HasColumnType("varchar(128)");

                            b1.Property<int>("Column")
                                .HasColumnType("int")
                                .HasColumnName("列序号");

                            b1.Property<int>("Depth")
                                .HasColumnType("int")
                                .HasColumnName("深序号");

                            b1.Property<int>("Layer")
                                .HasColumnType("int")
                                .HasColumnName("层序号");

                            b1.Property<int>("Row")
                                .HasColumnType("int")
                                .HasColumnName("排序号");

                            b1.HasKey("LocationId");

                            b1.ToTable("Locations");

                            b1.WithOwner()
                                .HasForeignKey("LocationId");
                        });

                    b.Navigation("RCLD");
                });
#pragma warning restore 612, 618
        }
    }
}
